version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: edushield-backend-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: edushield_backend
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d edushield_backend"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    command: >
      postgres
      -c shared_preload_libraries=pg_stat_statements
      -c pg_stat_statements.track=all
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c work_mem=4MB
      -c min_wal_size=1GB
      -c max_wal_size=4GB

  redis:
    image: redis:7-alpine
    container_name: edushield-backend-redis
    restart: unless-stopped
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
      - ./backups:/backups
    command: >
      redis-server
      --appendonly yes
      --save 900 1
      --save 300 10
      --save 60 10000
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Optional: Add a backup service
  backup:
    image: postgres:15-alpine
    container_name: edushield-backend-backup
    restart: "no"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      POSTGRES_PASSWORD: postgres123
    volumes:
      - ./backups:/backups
      - postgres_data:/var/lib/postgresql/data
    command: >
      sh -c '
        echo "Starting backup at $$(date)" &&
        pg_dump -h postgres -U postgres -d edushield_backend > /backups/backup_$$(date +%Y%m%d_%H%M%S).sql &&
        echo "Backup completed at $$(date)" &&
        find /backups -name "backup_*.sql" -mtime +7 -delete
      '

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
